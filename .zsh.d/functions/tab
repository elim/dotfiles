# Open new Terminal tabs from the command line
#
# Original Author: Justin Hileman (http://justinhileman.com)
# https://gist.github.com/bobthecow/757788
#
# Usage:
#     tab                   Opens the current directory in a new tab
#     tab [PATH]            Open PATH in a new tab
#     tab [CMD]             Open a new tab and execute CMD
#     tab [PATH] [CMD] ...  You can probably guess

# Only for teh Mac users
[[ "${OSTYPE}" =~ ^darwin* ]] || return
type tmux &> /dev/null || return

local tmux=$(which tmux)
local cmd=""
local cdto="$PWD"
local session_name=""
local args="$@"

if [ -d "$1" ]; then
    cdto=$(chpwd_functions= cd "${1}" &>/dev/null; pwd)
    args="${@:2}"
fi

session_name=$(basename ${cdto} | sed -e 's|\.|-|g')

if [ -n "$args" ]; then
    cmd="$args"
fi

osascript -l JavaScript &> /dev/null <<EOF
const iTerm = Application('iTerm');
const window = iTerm.currentWindow();
const tab = window.createTab({ withProfile: 'Default', command: 'sh'});
const session = tab.currentSession;

const commands = \`
echo -ne "\\\033]0;"${session_name}"\\\007"
cd "${cdto}"

if ${tmux} list-session -F'#S' | grep -E "^${session_name}$" 1>/dev/null 2>&1; then
  if [ -n "${cmd}" ]; then
    exec ${tmux} attach-session -t "${session_name}" \\\; new-window ${cmd}
  else
    exec ${tmux} attach-session -t "${session_name}"
  fi
else
  exec ${tmux} new-session -D -s "${session_name}" ${cmd}
fi
\`

session.select();
session.write({text: commands });

EOF

# Local Variables:
# mode: sh
# End:
